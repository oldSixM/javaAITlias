<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.atxm.mapper.StudentMapper">
    <insert id="insert">
        insert into student(name,no,gender,phone,degree,clazz_id,id_card,is_college,address,graduation_date,create_time,update_time)
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="no != null">
                #{no},
            </if>
            <if test="gender != null">
                #{gender},
            </if>
            <if test="phone != null">
                #{phone},
            </if>
            <if test="degree != null">
                #{degree},
            </if>
            <if test="clazzId != null">
                #{clazzId},
            </if>
            <if test="idCard != null">
                #{idCard},
            </if>
            <if test="isCollege != null">
                #{isCollege},
            </if>
            <if test="address != null">
                #{address},
            </if>
            <if test="graduationDate != null">
                #{graduationDate},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="updateTime != null">
                #{updateTime},
            </if>
        </trim>
    </insert>

    <update id="update">
        UPDATE student
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="no != null">
                no = #{no},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="degree != null">
                degree = #{degree},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="idCard != null">
                id_card = #{idCard},
            </if>
            <if test="isCollege != null">
                is_college = #{isCollege},
            </if>
            <if test="address != null">
                address = #{address},
            </if>
            <if test="graduationDate != null">
                graduation_date = #{graduationDate},
            </if>
            <if test="violationCount != null">
                violation_count = #{violationCount},
            </if>
            <if test="violationScore != null">
                violation_score = #{violationScore},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete">
        delete from student where id in
        <foreach collection="list" item="id" separator="," open="(" close=")">
            <if test="id != null">
                #{id}
            </if>
        </foreach>
    </delete>

    <select id="list" resultType="cn.atxm.pojo.Student">
        SELECT
        s.id,
        s.name,
        s.no,
        s.gender,
        s.phone,
        s.degree,
        s.id_card AS idCard,          -- 统一驼峰别名
        s.is_college AS isCollege,
        s.address,
        s.graduation_date AS graduationDate,
        s.violation_count AS violationCount,
        s.violation_score AS violationScore,
        s.clazz_id AS clazzId,
        c.name AS clazzName,          -- 明确别名
        s.create_time AS createTime,
        s.update_time AS updateTime
        FROM student s
        LEFT JOIN clazz c ON c.id = s.clazz_id
        <where>
            <!-- 前缀 AND 改为 <where> 自动处理 -->
            <if test="name != null and name != ''">
                s.name LIKE CONCAT(#{name}, '%')  -- 右模糊查询，可利用索引
            </if>
            <if test="degree != null">
                AND s.degree = #{degree}
            </if>
            <if test="clazzId != null">
                AND s.clazz_id = #{clazzId}
            </if>
        </where>
        ORDER BY updateTime DESC
    </select>
    <select id="getStudentDegreeData" resultType="java.util.Map">
        select case WHEN degree=1 then '初中'
                    when degree=2 then '高中'
                    when degree=3 then '大专'
                    when degree=4 then '本科'
                    when degree=5 then '硕士'
                    when degree=6 then '博士' end name,
               count(*) value
        from student group by degree order by value;
    </select>
</mapper>